CHARACTERS = {"Ironclad", "Silent", "Defect", "Watcher"}
PLAYERS_DATA = {
  Red = {
    hand = {
      guid = "198286"
    }
  },
  Green = {
    hand = {
      guid = "761a86"
    }
  },
  Blue = {
    hand = {
      guid = "507348"
    }
  },
  Pink = {
    hand = {
      guid = "32fa24"
    }
  },
}

function onLoad()
  for index, color in ipairs({ "Red", "Green", "Blue", "Pink" }) do
    local handZone = getObjectFromGUID(PLAYERS_DATA[color].hand.guid)
    handZone.setScale({
      x = 15.3268948,
      y = 11.8970528,
      z = 6.35014534
    })
    handZone.setPosition({
      x = -60 + 24 * index,
      y = 3.29337835,
      z = -34.42515,
    })
    handZone.setRotation({
      x = 0,
      y = 180,
      z = 0
    })
  end
end

function onObjectPickUp(playerColor, pickedUpObject)
  print(playerColor)
  print(pickedUpObject.name)
  print(pickedUpObject.guid)
end

function getAssignedCharacterToPlayer(arguments)
  local color = arguments.color
  return PLAYERS_DATA[color].character
end

function canAssignCharacterToPlayer(arguments)
  local character = arguments.character
  local color = arguments.color
  for color, data in pairs(PLAYERS_DATA) do
    if data.character != nil and data.character == character then
      return false
    end
  end
  return true
end

function assignCharacterToPlayer(arguments)
  local character = arguments.character
  local color = arguments.color
  PLAYERS_DATA[color].character = character
end

function canUnsignCharacterFromPlayer(arguments)
  local character = arguments.character
  local color = arguments.color

  return PLAYERS_DATA[color].character != nil and
    PLAYERS_DATA[color].character == character
end

function unsignCharacterFromPlayer(arguments)
  local color = arguments.color

  PLAYERS_DATA[color].character = nil
end

function startGame()
  log("Starting game...")
  log(JSON.encode_pretty(PLAYERS_DATA))
end